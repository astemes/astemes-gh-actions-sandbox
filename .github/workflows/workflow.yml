name: Demo Workflow
on: [push]
permissions:
  contents: write
jobs:
  checkout:
    runs-on: self-hosted
    steps:
      - name: Generate Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
            app-id: ${{ secrets.APP_ID }}
            private-key: ${{ secrets.APP_PRIVATE_KEY }}
            owner: astemes
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'
          token: ${{ steps.app-token.outputs.token }}
      - name: Checkout Tools
        uses: actions/checkout@v4
        with:
          repository: astemes/astemes-github-actions
          ref: main
          token: ${{ steps.app-token.outputs.token }}
          path: ./.github/actions
  clear-mutation-history:
    needs: checkout
    runs-on: self-hosted
    steps:
      - name: Clear Mutation history
        uses: ./.github/actions/clearMutationHistory
        with:
          directory: "source"
  test:
    needs: clear-mutation-history
    runs-on: self-hosted
    steps:
      - uses: ./.github/actions/runLUnitGCLI
        with:
          project-path: "source\\project.lvproj"
  build-exe:
    needs: test
    runs-on: self-hosted
    steps:
      - name: Get version
        id: get_version
        uses: ./.github/actions/getVersion
      - name: Build LabVIEW Build Specificaiton
        uses: ./.github/actions/buildLVBuildSpecGCLI
        with:
          project-path: "source\\project.lvproj"
          build-spec: "Application"
          version: "${{ steps.get_version.outputs.version }}"
  build-pkg:
    needs: build-exe
    runs-on: self-hosted
    outputs:
      nipkg-path: ${{ steps.build-nipkg.outputs.nipkg-path }}
    steps:
      - name: Get version
        id: get_version
        uses: ./.github/actions/getVersion
      - uses: ./.github/actions/buildLVBuildSpecGCLI
        id: build-nipkg
        with:
          project-path: "source\\project.lvproj"
          build-spec: "Package"
          version: "${{ steps.get_version.outputs.version }}"
  release-nipkg:
    needs: build-pkg
    runs-on: self-hosted
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Release nipkg
        uses: ./.github/actions/releaseFile
        with:
          file-path: "${{ needs.build-pkg.outputs.nipkg-path }}"
  build-vip:
    needs: build-exe
    runs-on: self-hosted
    outputs:
      vip-path: ${{ steps.build-vip.outputs.vip-path }}
    steps:
      - name: Get version
        id: get_version
        uses: ./.github/actions/getVersion
      - name: Build VIP
        id: build-vip
        uses: ./.github/actions/buildVIPackageGCLI
        with:
          vipb-path: "source\\vipm.vipb"
          pkg-version: "${{ steps.get_version.outputs.version }}"
  release-vip:
    needs: build-vip
    runs-on: self-hosted
    steps:
      - run: 'echo "${{ needs.build-vip.outputs.vip-path }}"'
        shell: powershell
      - name: Release VIP
        uses: ./.github/actions/releaseFile
        with:
          file-path: "${{ needs.build-vip.outputs.vip-path }}"
  docs:
    needs: checkout
    runs-on: self-hosted
    steps:
      - name: Build MKDocs
        if: startsWith(github.ref, 'refs/tags/')
        uses: ./.github/actions/buildDocs
        with:
            project-title: "Docs Sandbox"
            author: "Anton Sundqvist"
            initial-release: "2025"
      - name: Deploy GHPages
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          python -m mkdocs gh-deploy --force
        shell: powershell