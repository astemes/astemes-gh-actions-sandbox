name: Test Runner
on: [push]
permissions:
  contents: write
jobs:
  checkout:
    runs-on: self-hosted
    steps:
      - name: Generate Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
            app-id: ${{ secrets.APP_ID }}
            private-key: ${{ secrets.APP_PRIVATE_KEY }}
            owner: astemes
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'
          token: ${{ steps.app-token.outputs.token }}
      - name: Checkout Tools
        uses: actions/checkout@v4
        with:
          repository: astemes/astemes-github-actions
          ref: main
          token: ${{ steps.app-token.outputs.token }}
          path: ./.github/actions
  # clear-mutation-history:
  #   needs: checkout
  #   runs-on: self-hosted
  #   steps:
  #     - name: Clear Mutation history
  #       uses: ./.github/actions/clearMutationHistory
  #       with:
  #         directory: "source"
  # test:
  #   needs: clear-mutation-history
  #   runs-on: self-hosted
  #   steps:
  #     - uses: ./.github/actions/runLUnit
  #       with:
  #         project-path: "source\\project.lvproj"
  build-exe:
    needs: checkout
    runs-on: self-hosted
    steps:
      - uses: ./.github/actions/buildLVBuildSpec
        with:
          project-path: "source\\project.lvproj"
          build-spec: "Application"
  build-vip:
    needs: build-exe
    runs-on: self-hosted
    outputs:
      vip-path: ${{ steps.build-vip-step.outputs.vip-path }}
    steps:
      - name: Get version
        id: get_version
        uses: ./.github/actions/getVersion
      - name: Build VIP
        id: build-vip-step
        uses: ./.github/actions/buildVIPackage
        with:
          vipb-path: "source\\vipm.vipb"
          lv-version: "20.0"
          pkg-version: "${{ steps.get_version.outputs.version }}"

  release-vip:
    needs: build-vip
    runs-on: self-hosted
    steps:
      - run: 'echo "${{ needs.build-vip.outputs.vip-path }}"'
        shell: powershell
      - name: Release VIP
        uses: ./.github/actions/releaseFile
        with:
          file-path: "${{ needs.build-vip.outputs.vip-path }}"





       


  # build-exe:
  #   needs: test
  #   runs-on: self-hosted
  #   steps:
  #     - uses: ./.github/actions/buildLVBuildSpec
  #       with:
  #         project-path: "source\\project.lvproj"
  #         build-spec: "Application"
  # build-pkg:
  #   needs: build-exe
  #   runs-on: self-hosted
  #   steps:
  #     - uses: ./.github/actions/buildLVBuildSpec
  #       with:
  #         project-path: "source\\project.lvproj"
  #         build-spec: "Package"
  # docs:
  # needs: checkout
  # runs-on: self-hosted
  # steps:
  #   - name: Build MKDocs
  #     if: startsWith(github.ref, 'refs/tags/')
  #     uses: ./.github/actions/buildDocs
  #     with:
  #         project-title: "Docs Sandbox"
  #         author: "Anton Sundqvist"
  #         initial-release: "2025"
  #   - name: Deploy GHPages
  #     if: startsWith(github.ref, 'refs/tags/')
  #     run: |
  #       git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
  #       python -m mkdocs gh-deploy --force
  #     shell: powershell